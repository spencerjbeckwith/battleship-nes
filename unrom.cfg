MEMORY {
  ZP:     start = $00, size = $f0, type = rw;
  HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  RAM:    start = $0300, size = $0500, type = rw;

  ROM0:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
  ROM1:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$11;
  ROM2:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$22;
  ROM3:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$33;
  ROM4:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$44;
  ROM5:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$55;
  ROM6:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$66;

  RODATA:  start = $C000, size = $3FFA, type = ro, file = %O, fill=yes, fillval=$00;
  VECTORS:  start = $FFFA, size = $06, type = ro, file = %O, fill=yes, fillval=$A0;
}

SEGMENTS {
  ZEROPAGE: load = ZP, type = zp;
  RAM:      load = RAM, type = bss, define = yes, align = $100;

  HEADER:  load = HEADER, type = ro, align = $10;
  BANK0:   load = ROM0, type = ro, align = $100, optional = yes;
  BANK1:   load = ROM1, type = ro, align = $100, optional = yes;
  BANK2:   load = ROM2, type = ro, align = $100, optional = yes;
  BANK3:   load = ROM3, type = ro, align = $100, optional = yes;
  BANK4:   load = ROM4, type = ro, align = $100, optional = yes;
  BANK5:   load = ROM5, type = ro, align = $100, optional = yes;
  BANK6:   load = ROM6, type = ro, align = $100, optional = yes;

  RODATA:   load = RODATA, type = ro;
  VECTORS:  load = VECTORS, type = ro;
}

FILES {
  %O: format = bin;
}